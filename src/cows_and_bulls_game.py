'''
1) Learnt about join()  method
2) Learnt about map
3) Very neat trick to calculate bulls and cows!!

'''



'''
1. Computer selects a 4 digit number at random.                                                 <-- get_computer_choice()
    -  We need a way for the computer to select all 4 unique digits                             <-- random.sample()

2. User selects a 4 digit number. The goal is for them to guess the computer's number.          <-- get_player_choice()
    - we need to check the user enters a valid number i.e. 4 digit number. All digits unique.

3. We should store both these numbers are strings. and compare character by character. This part seems tricky to me. Let's finish 1 and 2 and we can come back to this one after that.

'''

import random

def get_computer_choice(lenght):
    
    return ''.join(list(map(str,random.sample(range(1,10),lenght))))
    '''
    random.sample(range(1,9), len):
        - range(1,10) creates a sequence of numbers from 1 to 9 (10 is excluded).
        - random.sample() selects a random sample of elements from the given sequence, with the length of the sample being determined by the len parameter.
        - This will generate a random "list of unique numbers" between 1 and 9, with the length of the list being determined by the len parameter.

    map(str, random.sample(range(1,10), len)):
        - map() applies the str() function to each element in the list generated by random.sample(range(1,10), len).

    list(map(str, random.sample(range(1,10), len))):
        - The map() object is converted to a list using the list() function.
        - This gives us a list of strings, each representing a random number between 1 and 9
        
    ''.join(list(map(str, random.sample(range(1,10), len)))):
        - The join() method is used to concatenate all the strings in the list into a single string, with no separator between them.
        - The empty string '' is used as the separator, effectively joining the strings without any additional characters.

    In summary, 
    this command generates a random list of unique numbers between 1 and 9, 
    converts each number to a string, 
    and then joins all the strings together into a single string without any separators.
    '''
    
def get_player_choice(length):

    while True:
        player_choice = input(f'Enter a {length} digit unique number: ')

        if ((player_choice.isdigit()) and (len(player_choice) == length) and (len(set(player_choice)) == length)): # very neat way.. 
            return player_choice
        else:
            print('Invalid guess. Please enter a 4-digit number with unique digits.')

# This is the main logic!!
def determine_bulls_and_cows(computer_choice, player_choice):
        
    bulls = sum([1 for i in range(len(computer_choice)) if player_choice[i] == computer_choice[i]])
    cows = sum([1 for i in range(len(computer_choice)) if player_choice[i] in computer_choice]) - bulls
          
    return bulls,cows
   

def play_game():

    LENGTH = 4    
    computer_choice = get_computer_choice(LENGTH)
    print(f'{computer_choice}')
    

    while True:
        player_choice = get_player_choice(LENGTH)
        [bulls, cows] = determine_bulls_and_cows(computer_choice, player_choice)
        print(f'{cows} cows, {bulls} bulls')
        if bulls == 4:
            print('Congratulations! You guessed the correct number')
            return
    



if __name__ == "__main__":
  play_game()






